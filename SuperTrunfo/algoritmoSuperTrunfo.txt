Super Trunfo Algoritmo

1º Criar 32 Cartas [Struct ou Vetor?]
2º Adicionar Aleatoriamente as Cartas em um Vetor

aleatoriamente escolher a super trunfo

3º Cria duas pilhas com 16 cartas cada para os dois jogadores [16 primeiras do vetor - 16 ultimas do vetor],


4º Perguntar se o Jogo vai Ser com 1 Player ou Dois

seta variavel boolean is two _players

5º Definir variável player Atual

6º Sorteio Aleatorio de Quem inicia e seta Player Atual


// inicio

while (not pilha1.isempty() && pilha2.isEmpty()){
if isTwoPlayers():
jogadaPlayer(playerAtual)

else{
 if playerAtual == p1:
   jogadaPlayer(p1)
else
jogadaBot()
}
}


if pilha_p1.isEmpty:
print player2 Venceu
else
print player 1 Venceu



// Funções

	




funcao jogadaPlayer(player){

// p1 aqui é o player atual e não player 1

exibeCarta;

 if not e_super_trunfo(carta){
pergunta atributo
set atributo

if atributo_carta_jogador > atributo_carta_player2
pilha_p1.add(pilha_p2.remove())
seta player atual pra player 1
printaVencendorRodada(p1)
else
pilha_p2.add(pilha_p1.remove())
printaVencendorRodada(p2)
seta player atual pra player 2

}

else {

if  not pilha_p2.top().isA()
pilha_p1.add(pilha_p2.remove())
seta player atual pra player 1
printaVencendorRodada(p1)
else
pilha_p2.add(pilha_p1.remove())
seta player atual pra player 2
printaVencendorRodada(p2)

}

}

funcao jogadaBot(){
//p1 é o player atual no caso o bot
exibeCarta;

 if not e_super_trunfo(carta){
escolher_atributo_bot()
printa_atributo_escolhido
set atributo

if atributo_carta_p1> atributo_carta_player2
pilha_p1.add(pilha_p2.remove())
seta player atual pra player 1
printaVencendorRodada(p1)
else
pilha_p2.add(pilha_p1.remove())
printaVencendorRodada(p2)
seta player atual pra player 2

}

else {

if  not pilha_p2.top().isA()
pilha_p1.add(pilha_p2.remove())
seta player atual pra player 1
printaVencendorRodada(p1)
else
pilha_p2.add(pilha_p1.remove())
seta player atual pra player 2
printaVencendorRodada(p2)

}

}

funcao escolher_atributo_bot(){
procura o maior valor e retorna o atributo
busca linear
}








funcao e_super_trunfo(carta)
  return contains supertrunfo










